datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  fullName  String
  email     String?  @unique
  phone     String?
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post      Post[]
  followers User[]    @relation("Followers")
  following User[]    @relation("Followers")
  like      Like[]
  comment   Comment[]
}

model Post {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  author   User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId Int
  like     Like[]
  comment  Comment[]

  @@index([authorId])
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int
  post   Post   @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId Int
  like   Like[]

  @@index([userId])
  @@index([postId])
}

model Like {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId    Int
  Comment   Comment? @relation(fields: [commentId], references: [id], onDelete: Cascade)
  commentId Int?

  @@index([userId])
  @@index([postId])
  @@index([commentId])
}
